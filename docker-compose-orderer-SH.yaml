version: '3.0'

volumes:
  orderer.example.com: {}

networks:
  cloudExNet:
    external:
      name: cloudExNet


services:
  orderer:
    command: orderer
    container_name: orderer.example.com
    environment:
      FABRIC_LOGGING_SPEC: INFO
      
      ORDERER_GENERAL_GENESISMETHOD: file
      ORDERER_GENERAL_GENESISFILE: /var/hyperledger/orderer/orderer.genesis.block
      
      ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
      
      ORDERER_GENERAL_LOCALMSPID: OrdererMSP
      ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/msp
      
      ORDERER_GENERAL_TLS_ENABLED: "true"
      ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
    image: hyperledger/fabric-orderer:latest
    networks:
      cloudExNet:
        aliases:
           - orderer.example.com
    ports:
    - 7050:7050/tcp
    volumes:
    - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp:rw
    - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block:rw
    - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls:/var/hyperledger/orderer/tls:rw
    - orderer.example.com:/var/hyperledger/production/orderer:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
